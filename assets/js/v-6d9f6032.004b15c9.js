"use strict";(self.webpackChunkstudy_note=self.webpackChunkstudy_note||[]).push([[7732],{1651:(e,t,a)=>{a.r(t),a.d(t,{data:()=>n});const n={key:"v-6d9f6032",path:"/vue/example/",title:"开篇",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"vue/example/readme.md",git:{updatedTime:164104785e4}}},330:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var n=a(6252);const r=(0,n._)("h1",{id:"开篇",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#开篇","aria-hidden":"true"},"#"),(0,n.Uk)(" 开篇")],-1),d=(0,n._)("p",null,[(0,n.Uk)("在我看完整个"),(0,n._)("code",null,"vue"),(0,n.Uk)("的核心源码之后，我发现对于源码解析，网上其实很多，从整个流程上。特别是响应式原理这块。但是这么看完，其实对于开发帮助并不算大。重要的其实是从例子出发，一个个功能点解析，这样对"),(0,n._)("code",null,"vue"),(0,n.Uk)(" 就能有更深入的了解。")],-1),u={},l=(0,a(3744).Z)(u,[["render",function(e,t){return(0,n.wg)(),(0,n.iD)(n.HY,null,[r,d],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{for(const[a,n]of t)e[a]=n;return e}}}]);