import{c as n}from"./app.e5067ea6.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="vuex" tabindex="-1"><a class="header-anchor" href="#vuex" aria-hidden="true">#</a> vuex</h1><p><code>vuex</code>\u548C<code>vue-router</code>\u4E00\u6837\uFF0C\u4E5F\u662F\u901A\u8FC7\u63D2\u4EF6\u7684\u65B9\u5F0F\u8FDB\u884C\u5F15\u5165\u7684\u3002\u56E0\u4E3A\u5F00\u53D1\u4E2D\uFF0C\u4E00\u822C\u90FD\u4F1A\u4F7F\u7528<code>modules</code>\u529F\u80FD\u5C06<code>store</code>\u8FDB\u884C\u6A21\u5757\u62C6\u5206\uFF0C\u6240\u4EE5\u4F8B\u5B50\u5C31\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\u8FDB\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>

<span class="token keyword">const</span> moduleA <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> moduleB <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> moduleA<span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> moduleB
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  store
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u6211\u4EEC\u5148\u770B<code>index.js</code>\uFF0C\u8FD9\u4E2A\u5F88\u7B80\u5355\uFF0C\u5BFC\u51FA\u4E86\u76F8\u5173\u65B9\u6CD5\uFF0C\u6240\u4EE5\u5173\u4E8E\u5B9A\u4E49\u53EA\u9700\u8981\u770B<code>store.js</code>\u5C31\u597D\u3002\u5728<code>install</code>\u65B9\u6CD5\u4E2D\u6267\u884C\u4E86<code>applyMixin</code>\uFF0C\u5176\u4E2D\u5C31\u662F\u6267\u884C\u4E86<code>Vue.mixin({ beforeCreate: vuexInit })</code>\u3002 \u800C<code>vuexInit</code>\u65B9\u6CD5\uFF0C\u5C31\u662F\u5C06\u4F20\u5165\u7684<code>store</code>\u5B9E\u4F8B\u8D4B\u503C\u7ED9\u4E86<code>this.$store</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">vuexInit</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options
  <span class="token comment">// store injection</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>store<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$store <span class="token operator">=</span> <span class="token keyword">typeof</span> options<span class="token punctuation">.</span>store <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
      <span class="token operator">?</span> options<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> options<span class="token punctuation">.</span>store
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>$store<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$store <span class="token operator">=</span> options<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>$store
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6CE8\u518C\u6D41\u7A0B\u5C31\u8FD9\u6837\u975E\u5E38\u7B80\u5355</p><h2 id="\u5B9E\u4F8B\u5316" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u5316" aria-hidden="true">#</a> \u5B9E\u4F8B\u5316</h2><p>\u5728<code>Store</code>\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u4E3B\u8981\u662F\u6267\u884C<code>options</code>\u7684\u89E3\u6790\uFF0C\u4E5F\u5C31\u662F\u6267\u884C<code>this._modules = new ModuleCollection(options)</code>\uFF0C\u5B9E\u4F8B\u5316<code>ModuleCollection</code>\u6267\u884C\u4E86<code>this.register([], rawRootModule, false)</code> \u6211\u4EEC\u6765\u770B\u770B<code>register</code>\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">register</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> rawModule<span class="token punctuation">,</span> runtime <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertRawModule</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> rawModule<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> newModule <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Module</span><span class="token punctuation">(</span>rawModule<span class="token punctuation">,</span> runtime<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> newModule
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    parent<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>path<span class="token punctuation">[</span>path<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> newModule<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>rawModule<span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">forEachValue</span><span class="token punctuation">(</span>rawModule<span class="token punctuation">.</span>modules<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">rawChildModule<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> rawChildModule<span class="token punctuation">,</span> runtime<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8BE5\u65B9\u6CD5\u9996\u5148\u5C06<code>options</code>\u901A\u8FC7<code>new Module</code>\u5B58\u653E\u5230<code>root</code>\uFF0C\u76F8\u5F53\u4E8E\u7ED9<code>options</code>\u5B58\u4E86\u4E00\u4E2A\u526F\u672C\u3002\u5982\u679C\u7528\u6237\u4F7F\u7528\u4E86<code>module</code>\u5C31\u901A\u8FC7\u5FAA\u73AF\u518D\u6B21\u6CE8\u518C\u8FD9\u65F6\u5019\u4F1A\u5427<code>module</code>\u653E\u5230<code>_children</code>\u4E0B\u9762 \u8FD9\u65F6\u5019<code>root</code>\u7684\u503C\u4E3A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">_children</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> Module<span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> Module
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">_rawModule</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4E4B\u540E\u5C31\u662F\u6838\u5FC3<code>installModule</code>\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4E3B\u8981\u6CE8\u518C\u4E86<code>mutation\u3001action\u3001getter\u3001module</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">installModule</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">,</span> module<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isRoot <span class="token operator">=</span> <span class="token operator">!</span>path<span class="token punctuation">.</span>length
  <span class="token keyword">const</span> namespace <span class="token operator">=</span> store<span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">getNamespace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>namespaced<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    store<span class="token punctuation">.</span>_modulesNamespaceMap<span class="token punctuation">[</span>namespace<span class="token punctuation">]</span> <span class="token operator">=</span> module
  <span class="token punctuation">}</span>

  <span class="token comment">// set state</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRoot <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> parentState <span class="token operator">=</span> <span class="token function">getNestedState</span><span class="token punctuation">(</span>rootState<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> moduleName <span class="token operator">=</span> path<span class="token punctuation">[</span>path<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    store<span class="token punctuation">.</span><span class="token function">_withCommit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      Vue<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>parentState<span class="token punctuation">,</span> moduleName<span class="token punctuation">,</span> module<span class="token punctuation">.</span>state<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E3A\u4E86\u4FDD\u8BC1\u4E0D\u540Cmodule\u53EF\u4EE5\u5B9A\u4E49\u76F8\u5F53\u540D\u5B57\u7684\u51FD\u6570\uFF0Cvuex\u7ED9\u51FD\u6570\u540D\u52A0\u4E0A\u4E86namespaced</span>
  <span class="token keyword">const</span> local <span class="token operator">=</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token function">makeLocalContext</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span>

  module<span class="token punctuation">.</span><span class="token function">forEachMutation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> namespacedType <span class="token operator">=</span> namespace <span class="token operator">+</span> key
    <span class="token function">registerMutation</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespacedType<span class="token punctuation">,</span> mutation<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  module<span class="token punctuation">.</span><span class="token function">forEachAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> action<span class="token punctuation">.</span>root <span class="token operator">?</span> key <span class="token operator">:</span> namespace <span class="token operator">+</span> key
    <span class="token keyword">const</span> handler <span class="token operator">=</span> action<span class="token punctuation">.</span>handler <span class="token operator">||</span> action
    <span class="token function">registerAction</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  module<span class="token punctuation">.</span><span class="token function">forEachGetter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">getter<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> namespacedType <span class="token operator">=</span> namespace <span class="token operator">+</span> key
    <span class="token function">registerGetter</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespacedType<span class="token punctuation">,</span> getter<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  module<span class="token punctuation">.</span><span class="token function">forEachChild</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">installModule</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> child<span class="token punctuation">,</span> hot<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="local" tabindex="-1"><a class="header-anchor" href="#local" aria-hidden="true">#</a> local</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> local <span class="token operator">=</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token function">makeLocalContext</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>local</code>\u7684\u6838\u5FC3\u662F\u6839\u636E<code>namespace</code>\u5B9A\u4E49\u4E86<code>dispatch</code>\u548C<code>commit</code>\u65B9\u6CD5\u3002\u5E76\u7ED9<code>getters</code>\u548C<code>state</code>\u5C5E\u6027\u505A\u4E86\u54CD\u5E94\u5F0F\u5904\u7406\u3002</p><h3 id="state-\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#state-\u521D\u59CB\u5316" aria-hidden="true">#</a> state \u521D\u59CB\u5316</h3><p>\u5728<code>state</code>\u7684\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u9996\u6B21\u6CA1\u4EC0\u4E48\u597D\u8BF4\u7684\uFF0C\u8FD9\u4E2A\u4E3B\u8981\u4F5C\u7528\u5728\u4E8E\u5904\u7406<code>Module</code>\uFF0C\u8FD9\u65F6\u5019<code>!!root</code>\u548C<code>!hot</code>\u90FD\u4E3A<code>true</code>\u3002\u5982\u679C\u5728<code>options</code>\u4E2D\u5B9A\u4E49\u4E86<code>state</code>\u90A3\u4E48 <code>parentState</code>\u5C31\u662F\u5B83\u7684\u503C\uFF0C<code>_withCommit</code>\u662F\u4E00\u4E2A\u9501\uFF0C\u5F53\u6709\u56DE\u8C03\u51FD\u6570\u5728\u6267\u884C\u7684\u65F6\u5019\uFF0C\u522B\u7684\u56DE\u8C03\u51FD\u6570\u5C31\u65E0\u6CD5\u6267\u884C\u3002\u5728\u56DE\u8C03\u51FD\u6570\u4E2D\u8C03\u7528\u4E86<code>Vue.set</code>\uFF0C\u5C06\u6A21\u5757\u4E2D\u7684\u5C5E\u6027\u653E\u5230\u4E86 \u4E3B\u6A21\u5757\u4E2D\uFF0C\u5E76\u4E14\u7528<code>set</code>\u4F7F\u5176\u54CD\u5E94\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> parentState <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8BBE\u7F6EA\u6A21\u5757\u7684state</span>
Vue<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>parentState<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8BBE\u7F6EB\u6A21\u5757\u7684state</span>
Vue<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>parentState<span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u901A\u8FC7<code>namespace</code>\u7684\u65B9\u6CD5\uFF0C\u5373\u4F7F\u6A21\u5757\u4E2D\u5C5E\u6027\u540D\u5B57\u76F8\u540C\u4E5F\u4E0D\u4F1A\u51B2\u7A81\u3002</p><p>\u66F4\u91CD\u8981\u7684\u662F\u6211\u4EEC\u77E5\u9053\uFF0C<code>state</code>\u4FEE\u6539\u4F1A\u89E6\u53D1\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\uFF0C\u662F\u54CD\u5E94\u5F0F\u7684\u3002\u5176\u5B9E\u5173\u4E8E\u54CD\u5E94\u5F0F\u7684\u5B9A\u4E49\uFF0C\u5728<code>resetStoreVM</code>\u65B9\u6CD5\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>store<span class="token punctuation">.</span>_vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">$$state</span><span class="token operator">:</span> state
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u4E2A\u4F20\u5165\u7684<code>state</code>\u5C31\u662F\u521D\u59CB\u5316\u597D\u7684<code>state</code>\u3002</p><h3 id="mutation-\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#mutation-\u521D\u59CB\u5316" aria-hidden="true">#</a> Mutation \u521D\u59CB\u5316</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> module<span class="token punctuation">.</span><span class="token function">forEachMutation</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">mutation<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> namespacedType <span class="token operator">=</span> namespace <span class="token operator">+</span> key
  <span class="token function">registerMutation</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespacedType<span class="token punctuation">,</span> mutation<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u770B\u4E0A\u9762\u8FD9\u6BB5\u4EE3\u7801\uFF0C\u901A\u8FC7<code>module</code>\u7684\u5FAA\u73AF\uFF0C\u62FF\u5230<code>key</code>\uFF0C\u7136\u540E\u7EC4\u88C5\u6210<code>namespacedType</code>\uFF0C\u5BF9\u4E8E\u4E0A\u9762\u7684\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>namespacedType <span class="token operator">=</span> <span class="token string">&#39;a/increment&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7136\u540E\u770B<code>registerMutation</code>\u65B9\u6CD5\uFF0C\u7ED9<code>store._mutations</code>\u6570\u7EC4\u4E2D\u6DFB\u52A0\u4E86\u4E00\u4E2A<code>wrappedMutationHandler</code>\u65B9\u6CD5\uFF0C\u6700\u7EC8\u4F1A\u6267\u884C\u4F20\u5165\u7684<code>mutation</code> \u4E5F\u5C31\u662F\u8BF4\u6700\u540E\u4F1A\u88AB\u7EC4\u548C\u6210</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>store <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">_mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;a/increment&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\u0192<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="action-\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#action-\u521D\u59CB\u5316" aria-hidden="true">#</a> Action \u521D\u59CB\u5316</h3><p>\u5728\u5FAA\u73AF\u9636\u6BB5\u548C<code>mutation</code>\u662F\u7C7B\u4F3C\u7684\uFF0C\u4E0D\u8FC7\u56E0\u4E3A<code>action</code>\u662F\u652F\u6301\u5F02\u6B65\u7684\uFF0C\u6240\u4EE5\u5728\u6CE8\u518C\u4E0A\u6709\u6240\u4E0D\u540C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">registerAction</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> local</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> entry <span class="token operator">=</span> store<span class="token punctuation">.</span>_actions<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>_actions<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  entry<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">wrappedActionHandler</span> <span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">handler</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
      store<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">dispatch</span><span class="token operator">:</span> local<span class="token punctuation">.</span>dispatch<span class="token punctuation">,</span>
        <span class="token literal-property property">commit</span><span class="token operator">:</span> local<span class="token punctuation">.</span>commit<span class="token punctuation">,</span>
        <span class="token literal-property property">getters</span><span class="token operator">:</span> local<span class="token punctuation">.</span>getters<span class="token punctuation">,</span>
        <span class="token literal-property property">state</span><span class="token operator">:</span> local<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
        <span class="token literal-property property">rootGetters</span><span class="token operator">:</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">,</span>
        <span class="token literal-property property">rootState</span><span class="token operator">:</span> store<span class="token punctuation">.</span>state
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      payload
    <span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPromise</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u7ED3\u679C\u7528<code>Promsie.resolve</code>\u8FDB\u884C\u5305\u88F9\uFF0C\u4E14\u4ED6\u53EF\u4EE5\u83B7\u53D6\u7684\u5165\u53C2\u66F4\u591A\u3002\u6700\u7EC8\u83B7\u53D6\u7684\u662F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>store <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">_actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;a/increment&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\u0192<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="getters\u521D\u59CB\u5316\u548C\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#getters\u521D\u59CB\u5316\u548C\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> Getters\u521D\u59CB\u5316\u548C\u54CD\u5E94\u5F0F</h3><p>\u5FAA\u73AF\u4E5F\u662F\u4E00\u6837\u5C31\u4E0D\u8BF4\u4E86\uFF0C\u4F46\u662F\u6CE8\u518C\u4F1A\u6709\u5F88\u5927\u4E0D\u540C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">registerGetter</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> rawGetter<span class="token punctuation">,</span> local</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>_wrappedGetters<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] duplicate getter key: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  store<span class="token punctuation">.</span>_wrappedGetters<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">wrappedGetter</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rawGetter</span><span class="token punctuation">(</span>
      local<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token comment">// local state</span>
      local<span class="token punctuation">.</span>getters<span class="token punctuation">,</span> <span class="token comment">// local getters</span>
      store<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token comment">// root state</span>
      store<span class="token punctuation">.</span>getters <span class="token comment">// root getters</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6709\u610F\u601D\u7684\u662F\uFF0C\u6211\u4EEC\u5728\u8FD9\u91CC\u53EF\u4EE5\u83B7\u53D6\u56DB\u4E2A\u53C2\u6570\u3002\u5E76\u4E14\u6211\u4EEC\u5728\u67E5\u770B<code>resetStoreVM</code>\u7684\u65F6\u5019\u53EF\u4EE5\u770B\u5230\uFF0C\u5B83\u5C06<code>_wrappedGetters</code>\u8F6C\u6362\u6210\u4E86<code>computed</code>\u653E\u5230\u4E86<code>store._vm</code>\u5B9E\u4F8B\u5316\u7684<code>vue</code>\u7684<code>computed</code>\u4E2D\u5B9E\u73B0\u54CD\u5E94\u5F0F\uFF0C \u5E76\u4E14\u5BF9<code>store.getters</code>\u8FDB\u884C\u4E86\u62E6\u622A\uFF0C\u54CD\u5E94\u5230\u4E86<code>store._vm</code></p><h2 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h2><h3 id="vuex-\u8F85\u52A9\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#vuex-\u8F85\u52A9\u51FD\u6570" aria-hidden="true">#</a> vuex \u8F85\u52A9\u51FD\u6570</h3><p><code>normalizeNamespace</code>\u51FD\u6570\u5C31\u662F\u83B7\u53D6\u5F53\u524D\u4F20\u5165\u7684\u53C2\u6570\u4E2D\u662F\u5426\u5177\u6709<code>namespace</code>\u5B57\u6BB5\uFF0C\u5E76\u4E14\u5E8F\u5217\u5316\u6210<code>/x</code>\u3002 <code>normalizeMap</code> \u5C31\u662F\u5427\u5BF9\u8C61\u548C\u6570\u7EC4\u4E24\u79CD\u5F62\u5F0F\u90FD\u8F6C\u6362\u6210\u5BF9\u8C61\u7684<code>key</code> <code>value</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">normalizeMap</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
<span class="token function">normalizeMap</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="state\u7684\u4F7F\u7528\u548Cmapstate" tabindex="-1"><a class="header-anchor" href="#state\u7684\u4F7F\u7528\u548Cmapstate" aria-hidden="true">#</a> state\u7684\u4F7F\u7528\u548CmapState</h3><p>\u5728\u6211\u4EEC\u7684\u4F7F\u7528\u8FC7\u7A0B\u4E2D\uFF0C\u6700\u7EC8\u5176\u5B9E\u662F\u8C03\u7528\u7684<code>computed</code>\uFF0C<code>computed</code>\u4F1A\u8C03\u7528<code> watcher.evaluate()</code>\u6267\u884C\u5230<code>this.getter.call(vm, vm)</code>\uFF0C\u90A3\u4E5F\u5C31\u662F\u5B9A\u4E49\u8FD4\u56DE\u7684<code>mapState</code>\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mappedState</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state
  <span class="token keyword">let</span> getters <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters
  <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token function">getModuleByNamespace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token string">&#39;mapState&#39;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    state <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>state
    getters <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>getters
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
    <span class="token operator">?</span> <span class="token function">val</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> getters<span class="token punctuation">)</span>
    <span class="token operator">:</span> state<span class="token punctuation">[</span>val<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u56E0\u4E3A\u662F\u6A21\u5757\u5185\uFF0C<code>module.context</code>\u5176\u5B9E\u5C31\u662F\u4E4B\u524D\u5B9A\u4E49\u7684<code>makeLocalContext(store, namespace, path)</code>\uFF0C\u5728\u8FD9\u91CC\u9762\u6709\u4E2A<code>state</code>\u548C <code>getters</code>\u62E6\u622A\u5668\u3002\u8FD9\u91CC\u4F1A\u89E6\u53D1\u4F9D\u8D56\u6536\u96C6\uFF0C\u5E76\u4E14\u6700\u7EC8\u8FD4\u56DE<code>state[val]</code></p><h3 id="getter-\u548C-mapgetters-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#getter-\u548C-mapgetters-\u7684\u4F7F\u7528" aria-hidden="true">#</a> getter \u548C mapGetters \u7684\u4F7F\u7528</h3><p>\u8FD9\u4E2A\u5176\u5B9E\u548C<code>state</code>\u662F\u4E00\u6837\u7684\uFF0C<code>state</code>\u56E0\u4E3A\u53EA\u662F\u4E00\u4E2A\u503C\uFF0C\u6216\u8005\u6709\u53EF\u80FD\u662F\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u6240\u4EE5\u5B83\u7684\u8FD4\u56DE\u9700\u8981\u5305\u88F9\uFF0C\u4F46\u662F<code>getters</code>\u5FC5\u987B\u662F\u4E00\u4E2A\u65B9\u6CD5\uFF0C \u6240\u4EE5\u5B83\u53EA\u8981\u6B63\u786E\u7684\u8FD4\u56DE<code>key</code>\u5BF9\u5E94\u7684<code>val</code>\u7ED9<code>computed</code>\u53BB\u6267\u884C\u5C31\u53EF\u4EE5\u4E86\uFF0C\u6240\u4EE5\u5B83\u7684<code>mapGetters</code>\u5F88\u7B80\u5355 \u4E0D\u8D58\u8FF0</p><h3 id="mutations-\u3001actions-\u548C-mapmutations-\u3001mapactions\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#mutations-\u3001actions-\u548C-mapmutations-\u3001mapactions\u7684\u4F7F\u7528" aria-hidden="true">#</a> mutations \u3001actions \u548C mapMutations \u3001mapActions\u7684\u4F7F\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mappedMutation</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> commit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>commit
  <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token function">getModuleByNamespace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token string">&#39;mapMutations&#39;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    commit <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>commit
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
    <span class="token operator">?</span> <span class="token function">val</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">commit</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u548C\u524D\u9762\u7C7B\u4F3C\uFF0C\u5982\u679C\u662F<code>module</code>\u5C31\u8C03\u7528<code>local</code>\u4E2D\u7684 <code>commit</code>\u65B9\u6CD5\uFF0C\u5982\u679C\u4E0D\u662F\u5C31\u8C03\u7528\u6784\u9020\u51FD\u6570\u4E2D\u7533\u660E\u7684<code>commit</code>\u3002\u5728<code>local</code>\u7684<code>commit</code>\u5C31\u662F\u901A\u8FC7 <code>namespace</code>\u62FF\u5230\u5BF9\u5E94\u7684\u53D1\u884C\uFF0C\u6700\u7EC8\u8FD8\u662F\u8C03\u7528<code>commit</code>\u51FD\u6570</p><p><code>action</code>\u548C<code>mutation</code>\u662F\u7C7B\u4F3C\u7684\uFF0C\u4E0D\u8FC7<code>actions</code>\u8C03\u7528\u7684\u662F <code>dispatch</code>\u51FD\u6570\uFF0C\u6700\u540E\u8FD4\u56DE\u4E86\u4E00\u4E2A<code>Promise</code>\u3002\u7136\u540E\u4EA4\u7ED9<code>commit</code>\u6267\u884C\u3002</p>`,52);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
